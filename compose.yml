services:

  nginx:
    image: nginx:alpine
    container_name: nginx-loadbalancer
    ports:
      - "9999:9999"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rinhaquark2025-a
      - rinhaquark2025-b
    networks:
      - rinhaquark-rede
    mem_limit: 10m
    cpus: 0.2

  rinhaquark2025-a:
    image: rinhaquark2025:1.0.1
    build:
      context: .
      dockerfile: Dockerfile.native
    container_name: rinhaquark2025-a
    environment:
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongo:27017
    depends_on:
      - mongo
    volumes:
      - ./target/rinhaquark-2025-1.0.0-SNAPSHOT-runner:/app/rinhaquark-2025-1.0.0-SNAPSHOT-runner
    networks:
      - rinhaquark-rede
      - payment-processor
    mem_limit: 100m
    cpus: 0.4

  rinhaquark2025-b:
    image: rinhaquark2025:1.0.1
    build:
      context: .
      dockerfile: Dockerfile.native
    container_name: rinhaquark2025-b
    environment:
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongo:27017
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./target/rinhaquark-2025-1.0.0-SNAPSHOT-runner:/app/rinhaquark-2025-1.0.0-SNAPSHOT-runner
    networks:
      - rinhaquark-rede
      - payment-processor
    mem_limit: 100m
    cpus: 0.4

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - rinhaquark-rede
    mem_limit: 2g
    cpus: 0.5
    healthcheck:
      test: [ "CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet" ]
      interval: 5s
      timeout: 3s
      retries: 3

  prometheus:
    image: prom/prometheus:v2.26.0
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    networks:
      - rinhaquark-rede
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - rinhaquark-rede
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"  # Interface web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Permite gerenciar o Docker host
    restart: unless-stopped

volumes:
  mongo-data:

networks:
  rinhaquark-rede:
    driver: bridge
  payment-processor:
    external: true